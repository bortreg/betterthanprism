tfh$macaque.ID <- as.factor(tfh$macaque.ID)
#Index tfh to identify populations of interest
cd8Cxcr5 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4-,CD8+/CXCR5+", ]
cd4pd1Dneg <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3-,CXCR5-", ]
cd4pd1X5 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3-,CXCR5+", ]
cd4pd1X3 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3+,CXCR5-", ]
cd4pd1Dpos <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3+,CXCR5+", ]
#Index df with specific timepoint
wk2 <- cd4pd1X5[cd4pd1X5$study.wk == -2, ]
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(fill = "white") + geom_jitter(width = 0.15) +
theme_light()
p
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(fill = "white") + theme_light()
p
p + geom_jitter(width = 0.15)
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(size = 1.5, fill = "white") + theme_light()
p
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 1.0, fill = "white") + theme_light()
p
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.3, fill = "white") + theme_light()
p
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.25)
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.15)
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.05)
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.07)
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08)
p + geom_jitter(width = 0.08, aes(color = macaque.ID))
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vacc.route))
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = vaccine.route, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = study.wk, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
#plot data for each population at a given timepoint
p <- ggplot(wk2, aes(x = study.wk, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(tfh, aes(x = cd4pd1Dpos, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(x = study.wk, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 0.2, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 0.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.5, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(color = macaque.ID, shape = vaccine.route))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=56, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=112, linetype="dashed", color = "black", size = 0.3)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
tfh[tfh$study.wk == 16] <- 16.43
tfh %>%
mutate(study.wk = replace(study.wk, study.wk == 16, 16.43)
tfh %>%
mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
tfh <- tfh %>%
mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
View(tfh)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Open Data from Exported from FlowJo and format for analysis
tfh <- read.csv("~/Desktop/20190905_TfhPanel_comb_v01.csv")
tfh$macaque.ID <- as.factor(tfh$macaque.ID)
tfh <- tfh %>%
+     mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
#Open Data from Exported from FlowJo and format for analysis
tfh <- read.csv("~/Desktop/20190905_TfhPanel_comb_v01.csv")
tfh$macaque.ID <- as.factor(tfh$macaque.ID)
tfh <- tfh %>%
+     mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
View(tfh)
tfh <- tfh %>%
+     mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
#Load packages
library(ggplot2)
#Open Data from Exported from FlowJo and format for analysis
tfh <- read.csv("~/Desktop/20190905_TfhPanel_comb_v01.csv")
tfh$macaque.ID <- as.factor(tfh$macaque.ID)
#Load packages
library(ggplot2)
library(dplyr)
#Open Data from Exported from FlowJo and format for analysis
tfh <- read.csv("~/Desktop/20190905_TfhPanel_comb_v01.csv")
tfh$macaque.ID <- as.factor(tfh$macaque.ID)
tfh <- tfh %>%
+     mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
#Open Data from Exported from FlowJo and format for analysis
tfh <- read.csv("~/Desktop/20190905_TfhPanel_comb_v01.csv")
tfh$macaque.ID <- as.factor(tfh$macaque.ID)
tfh <- tfh %>%
mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
#Index tfh to identify populations of interest
cd8Cxcr5 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4-,CD8+/CXCR5+", ]
cd4pd1Dneg <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3-,CXCR5-", ]
cd4pd1X5 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3-,CXCR5+", ]
cd4pd1X3 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3+,CXCR5-", ]
cd4pd1Dpos <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3+,CXCR5+", ]
#Index df with specific timepoint
wk2 <- cd4pd1X5[cd4pd1X5$study.wk == -2, ]
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.5, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPsave <- wkP + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells") +
pdf("Desktop/graphBucket/OVS2flowPlots/CircX3X5.pdf") +
lgLab +
dev.off()
#Save PDF of plot
#Add plot labels
wkPsave <- wkP + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells") +
pdf("Desktop/graphBucket/OVS2flowPlots/CircX3X5.pdf") +
wkPsave +
dev.off()
#Save PDF of plot
#Add plot labels
wkPsave <- wkP + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
pdf("Desktop/graphBucket/OVS2flowPlots/CircX3X5.pdf") +
wkPsave +
dev.off()
#Save PDF of plot
#Add plot labels
wkPsave <- wkP + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPsave
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPsave <- wkP + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPsave <- wkP + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPl
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPlab
getwd()
View(tfh)
getwd()
#Load packages
library(ggplot2)
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
library(dplyr)
#Open Data from Exported from FlowJo and format for analysis
tfh <- read.csv("~/Desktop/20190917_TfhPanel_comb_v02.csv")
tfh$macaque.ID <- as.factor(tfh$macaque.ID)
#This is a way to "find and replace" with dplyr! Better than xcel :-)
tfh <- tfh %>%
mutate(study.wk = replace(study.wk, study.wk == 16, 16.43))
#Index tfh to identify populations of interest
cd8Cxcr5 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4-,CD8+/CXCR5+", ]
cd4pd1Dneg <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3-,CXCR5-", ]
cd4pd1X5 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3-,CXCR5+", ]
cd4pd1X3 <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3+,CXCR5-", ]
cd4pd1Dpos <- tfh[tfh$population == "Cells/Singlets/Live/Tcells/CD4+,CD8-/PD-1low/CXCR3+,CXCR5+", ]
#Index df with specific timepoint
wk2 <- cd4pd1X5[cd4pd1X5$study.wk == -2, ]
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
View(cd4pd1Dpos)
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPlab
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dneg, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPlab
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1X5, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPlab
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1X3, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPlab
#plot data for each population at a given timepoint
p <- ggplot(cd4pd1Dpos, aes(group = study.wk, x = study.wk, y = statistic)) +
geom_boxplot(size = 0.3, width = 1.8, fill = "white") + theme_light()
wkP <- p + geom_jitter(width = 0.08, aes(shape = vaccine.route, color = macaque.ID))
wkPl <- wkP + geom_vline(xintercept = 0, linetype="solid", color = "black", size=0.3)+
geom_vline(xintercept=8, linetype="dashed", color = "black", size = 0.3)+
geom_vline(xintercept=16, linetype="dashed", color = "black", size = 0.3)
#Save PDF of plot
#Add plot labels
wkPlab <- wkPl + labs(title = "Circulating Tfh",subtitle = "PBMC", color = "macaque",
x = "Study Week", y = "%CXCR3+ CXCR5+ of PD-1low CD4 T cells")
wkPlab
#Calculate column statistics for timepoints
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
View(col1)
#Calculate column statistics for timepoints
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col1 <- col1$statistic
View(col1)
#Calculate column statistics for timepoints
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col2 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == 2, ]
qqnorm(col1$statistic)
qqnorm(col1$statistic, pch=19)
qqline(col1$statistic)
#Check normality of data
qqnorm(col1$statistic,main = "Column 1" pch=19)
#Check normality of data
qqnorm(col1$statistic,main = "Column 1", pch=19)
qqline(col1$statistic)
qqnorm(col2$statistic,main = "Column 2", pch=19)
qqline(col2$statistic)
#Asign variables for column statistics for timepoints
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col2 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == 2, ]
#Check normality of data
shapiro.test(col1$statistic)
qqnorm(col1$statistic,main = "Column 1", pch=19)
qqline(col1$statistic)
shapiro.test(col1$statistic)
qqnorm(col2$statistic,main = "Column 2", pch=19)
shapiro.test(col2$statistic)
qqnorm(col2$statistic,main = "Column 2", pch=19)
qqline(col2$statistic)
?t.test
t.test(col1$statistic, col2$statistic, paired = TRUE)
t.test(col1$statistic, col2$statistic, paired = FALSE)
?subset
#Asign variables for column statistics for timepoints
col1oral <- subset(cd4pd1Dpos, vaccine.route == "Oral", statistic)
View(col1oral)
#Asign variables for column statistics for timepoints
col1oral <- subset(cd4pd1Dpos, vaccine.route == "Oral", study.week == -2, statistic)
#Asign variables for column statistics for timepoints
col1oral <- subset(cd4pd1Dpos, vaccine.route == "Oral", study.wk == -2, statistic)
#Asign variables for column statistics for timepoints
col1oral <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col1oral <- cd4pd1Dpos[cd4pd1Dpos$vaccine.route == "Oral", ]
#Asign variables for column statistics for timepoints
col1oral <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col1oral <- col1oral[col1oral$vaccine.route == "Oral", ]
#Asign variables for column statistics for timepoints
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col1oral <- col1[col1$vaccine.route == "Oral", ]
View(col1oral)
#Asign variables for column statistics for timepoints
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col1oral <- col1[col1$vaccine.route == "Oral", ]
col1im <- col1[col1$vaccine.route == "IM", ]
col2 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == 2, ]
col2oral <- col2[col2$vaccine.route == "Oral", ]
col2im <- col2[col2$vaccine.route == "IM", ]
#Check normality of data (data is normal if p > 0.05)
shapiro.test(col1$statistic)
qqnorm(col1$statistic,main = "Column 1", pch=19)
qqline(col1$statistic)
shapiro.test(col1oral$statistic)
qqnorm(col1oral$statistic,main = "Column 1", pch=19)
qqline(col1oral$statistic)
shapiro.test(col1im$statistic)
qqnorm(col1im$statistic,main = "Column 1", pch=19)
qqline(col1im$statistic)
shapiro.test(col2$statistic)
qqnorm(col2$statistic,main = "Column 2", pch=19)
qqline(col2$statistic)
shapiro.test(col2oral$statistic)
qqnorm(col2oral$statistic,main = "Column 1", pch=19)
qqline(col2oral$statistic)
shapiro.test(col2im$statistic)
qqnorm(col2im$statistic,main = "Column 1", pch=19)
qqline(col2im$statistic)
#ttest of data
t.test(col1$statistic, col2$statistic, paired = TRUE)
t.test(col1im$statistic, col2im$statistic, paired = TRUE)
t.test(col1oral$statistic, col2oral$statistic, paired = TRUE)
#Asign variables for column statistics for timepoints
col1 <- cd4pd1X5[cd4pd1X5$study.wk == -2, ]
col1oral <- col1[col1$vaccine.route == "Oral", ]
col1im <- col1[col1$vaccine.route == "IM", ]
col2 <- cd4pd1X5[cd4pd1X5$study.wk == 2, ]
col2oral <- col2[col2$vaccine.route == "Oral", ]
col2im <- col2[col2$vaccine.route == "IM", ]
#Check normality of data (data is normal if p > 0.05)
shapiro.test(col1$statistic)
qqnorm(col1$statistic,main = "Column 1", pch=19)
qqline(col1$statistic)
shapiro.test(col1oral$statistic)
qqnorm(col1oral$statistic,main = "Column 1", pch=19)
qqline(col1oral$statistic)
shapiro.test(col1im$statistic)
qqnorm(col1im$statistic,main = "Column 1", pch=19)
qqline(col1im$statistic)
shapiro.test(col2$statistic)
qqnorm(col2$statistic,main = "Column 2", pch=19)
qqline(col2$statistic)
shapiro.test(col2oral$statistic)
qqnorm(col2oral$statistic,main = "Column 1", pch=19)
qqline(col2oral$statistic)
shapiro.test(col2im$statistic)
qqnorm(col2im$statistic,main = "Column 1", pch=19)
qqline(col2im$statistic)
#ttest of data
t.test(col1$statistic, col2$statistic, paired = TRUE)
t.test(col1im$statistic, col2im$statistic, paired = TRUE)
#ttest of data
t.test(col1$statistic, col2$statistic, paired = TRUE)
t.test(col1im$statistic, col2im$statistic, paired = TRUE)
t.test(col1oral$statistic, col2oral$statistic, paired = TRUE)
#Check normality of data (data is normal if p > 0.05)
shapiro.test(col1$statistic)
qqnorm(col1$statistic,main = "Column 1", pch=19)
qqline(col1$statistic)
shapiro.test(col1oral$statistic)
qqnorm(col1oral$statistic,main = "Column 1", pch=19)
qqline(col1oral$statistic)
shapiro.test(col1im$statistic)
qqnorm(col1im$statistic,main = "Column 1", pch=19)
qqline(col1im$statistic)
shapiro.test(col2$statistic)
qqnorm(col2$statistic,main = "Column 2", pch=19)
qqline(col2$statistic)
shapiro.test(col2oral$statistic)
qqnorm(col2oral$statistic,main = "Column 1", pch=19)
qqline(col2oral$statistic)
shapiro.test(col2im$statistic)
qqnorm(col2im$statistic,main = "Column 1", pch=19)
qqline(col2im$statistic)
#ttest of data
t.test(col1$statistic, col2$statistic, paired = TRUE)
t.test(col1im$statistic, col2im$statistic, paired = TRUE)
t.test(col1oral$statistic, col2oral$statistic, paired = TRUE)
View(col1)
col1 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == -2, ]
col1oral <- col1[col1$vaccine.route == "Oral", ]
col1im <- col1[col1$vaccine.route == "IM", ]
col2 <- cd4pd1Dpos[cd4pd1Dpos$study.wk == 2, ]
col2oral <- col2[col2$vaccine.route == "Oral", ]
col2im <- col2[col2$vaccine.route == "IM", ]
View(col1)
View(col1$statistic)
View(col2$statistic)
View(col2)
?t.test
col1$statistic
col2$statistic
